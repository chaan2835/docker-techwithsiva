What is the difference between Virtualization and Containerization? 

Resource optimization is the main difference, Guest OS can block all the resources allocated it but containers dont block the resources. 
Apart from this provisioning/boot up time is very less in containers as they are very less size compared to VM. 
Scalability, high availability are achieved easily. Containers are immutable in nature they work same across all environment. 
basically build once and run anywhere. Performance is improved as containers can communicate with physical hardware directly where as 
in virtualization there is a hypervisor layer.
================================================
How to do the port mapping to the container?

We will docker -p [host-port]:[container-port] option
===================================================

How can you get the shell access of running container?

We need to issue docker exec -it [container-ID] bash command to get inside of the container.
=================================================
What is the difference between RUN and CMD?

RUN is the instruction executes at the time of image creation, CMD is the instruction executes at the time of Container creation. 
CMD commands keeps the container running. RUN is used to install packages, configure something at the time of image creation
================================================
What is Dockerfile?

Dockerfile is the declarative way of creating our own images. We need to use Dockerfile instructions to create the image.
==============================================
How do you build Docker image?

We need to use docker build -t [REPO-URL]/[USERNAME]/[IMAGE-NAME]:version . 
We should have Dockerfile available in the directory where we run docker build command
================================================
What is the difference between ADD vs COPY?

ADD and COPY does the same, copying the files from local to container. But ADD has some extra capabilities.
1. ADD can download the resources from internet to Container.
2. ADD can directly direct unzip the file into container if it is recognized format.
===========================================
What is the Difference between ARG and ENV?

1. ARG is the instruction used to hold variables at the build time. We can pass the values from command line using --build-arg KEY=VALUE 
docker build --build-arg USERNAME=sivakumar -t image-name:version . 

2. ARG variables are valid only for build time not valid at the time container running. 

3. ARG is the only instruction that can be written before FROM, ARG before FROM is valid till FROM statement only. 

4. ENV is the instruction used to hold variables at the build time and container as well. 

5. We mix ENV and ARG for best results, like assign the value of ARG to ENV variable.
=================================
What are Docker volumes?

Docker by default remove the data when it is deleted. So when we are running stateful applications like databases we need to use Docker volumes that will not delete the data after container is deleted.
to create volume
Named volumes
-------------------
docker volume create [name-of-volume]
docker volume ls
docker run -v [name-of-volume]:[container-path] [image]:[version]

there is another way anonymous volumes, i.e without creating volumes we can directly mount the directory in host to the container. But this is not recommended.

docker run -v /some/path/inhost:/container/path [image]:[version]
============================================

Tell us the best practices you implemented while creating docker images?

1. Use light weight base images like alpine, busybox, etc.
2. Multi stage builds, remove unnecessary installations.
3. Non root users
4. Use volumes for stateful applications
5. Use docker compose
6. Use env variables instead of hard coding.
7. Use dedicated custom networks.
8. Dont keep secrets in images.
9. Scan the images and fix vulnerabilities.
10. Limit resources CPU, RAM
11. Configure health checks
